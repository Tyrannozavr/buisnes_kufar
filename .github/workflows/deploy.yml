name: Deploy to production

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          echo "Host target-server" >> ~/.ssh/config
          echo "  HostName ${{ secrets.SERVER_IP }}" >> ~/.ssh/config
          echo "  User root" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy with validation
        run: |
          ssh target-server "
            set -e  # –ü—Ä–µ—Ä—ã–≤–∞—Ç—å –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ
            
            cd buisnes_kufar
            
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            git fetch origin
            if git diff --quiet HEAD origin/master; then
              echo '‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π. –í—ã—Ö–æ–¥–∏–º.'
              exit 0
            fi
            
            # 2. –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫—É –æ—Ç–∫–∞—Ç–∞
            current_commit=\$(git rev-parse HEAD)
            
            # 3. –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            git reset --hard origin/master
            
            # 4. –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            if docker compose up -d --build --force-recreate; then
              # 5. –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
              sleep 15
              
              # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –û–°–ù–û–í–ù–´–ï –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
              REQUIRED_CONTAINERS='backend frontend nginx'
              running_containers=\$(docker compose ps --services --filter 'status=running')
              
              for container in \$REQUIRED_CONTAINERS; do
                if ! echo \"\$running_containers\" | grep -q \"^\$container\$\"; then
                  echo \"‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä \$container –Ω–µ –∑–∞–ø—É—â–µ–Ω!\"
                  echo \"=== –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ===\"
                  docker compose logs \$container
                  exit 1
                fi
              done
              
              echo '‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã!'
            else
              echo '‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏/–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤! –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º...'
              git reset --hard \$current_commit
              docker compose down
              docker compose up -d
              exit 1
            fi
          " || exit 1  # –í–∞–∂–Ω–æ: –∑–∞–≤–µ—Ä—à–∞–µ–º step —Å –æ—à–∏–±–∫–æ–π –µ—Å–ª–∏ ssh –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π

      - name: Clean up old images
        if: success()
        run: |
          ssh target-server "
            echo 'üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker –æ–±—Ä–∞–∑–æ–≤...'
            docker image prune -af
            echo '‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.'
          "