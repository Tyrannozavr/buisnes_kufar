name: Deploy to production

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Сначала настраиваем SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          echo "Host target-server" >> ~/.ssh/config
          echo "  HostName ${{ secrets.SERVER_IP }}" >> ~/.ssh/config
          echo "  User root" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy with validation
        run: |
          ssh target-server "
            cd buisnes_kufar && \
            # 1. Получаем изменения, но НЕ применяем сразу
            git fetch origin && \
            # 2. Запускаем контейнеры в тестовом режиме (временные)
            docker compose -f docker-compose.yml up -d --build --force-recreate && \
            # 3. Проверяем, что все контейнеры запустились
            if [ $(docker compose ps --services --status running | wc -l) -eq 4 ]; then
              echo '✅ Все контейнеры работают! Применяем изменения...' && \
              git reset --hard origin/master  # Фиксируем новую версию кода
            else
              echo '❌ Ошибка: контейнеры не запустились! Откатываем...' && \
              docker compose down && \  # Останавливаем временные контейнеры
              git reset --hard HEAD  # Откатываемся к предыдущей версии
              exit 1  # Помечаем workflow как failed
            fi
          "