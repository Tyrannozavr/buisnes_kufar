#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–°–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
"""

import asyncio
import random
from datetime import datetime, timedelta
from pathlib import Path
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(str(Path(__file__).parent))

from seed_database import DatabaseSeeder, RUSSIAN_CITIES, BUSINESS_ACTIVITIES
from app.api.authentication.models.user import User
from app.api.company.models.company import Company, TradeActivity, BusinessType
from app.api.products.models.product import Product, ProductType
from app.api.company.models.announcement import Announcement
from app.db.base import AsyncSessionLocal
import bcrypt


class DemoSeeder(DatabaseSeeder):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–µ–¥–µ—Ä —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏"""
    
    async def create_demo_data(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        print("üé≠ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        demo_users = [
            {
                "name": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                "email": "ivan.petrov@example.com",
                "position": "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
                "company_type": "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –º–µ–±–µ–ª–∏"
            },
            {
                "name": "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", 
                "email": "anna.sidorova@example.com",
                "position": "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
                "company_type": "IT-—É—Å–ª—É–≥–∏"
            },
            {
                "name": "–ú–∏—Ö–∞–∏–ª –ö–æ–∑–ª–æ–≤",
                "email": "mikhail.kozlov@example.com", 
                "position": "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é",
                "company_type": "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ"
            }
        ]
        
        for i, user_data in enumerate(demo_users, 1):
            first_name, last_name = user_data["name"].split()
            
            user = User(
                email=user_data["email"],
                first_name=first_name,
                last_name=last_name,
                patronymic="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á" if i == 1 else "–°–µ—Ä–≥–µ–µ–≤–∏—á" if i == 2 else "–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
                phone=f"+7 9{random.randint(10, 99)} {random.randint(100, 999)}-{random.randint(10, 99)}-{random.randint(10, 99)}",
                inn=f"{random.randint(1000000000, 9999999999)}",
                position=user_data["position"],
                hashed_password=bcrypt.hashpw("password123".encode('utf-8'), bcrypt.gensalt()).decode('utf-8'),
                is_active=True
            )
            self.session.add(user)
            self.users.append(user)
        
        await self.session.flush()
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
        demo_companies_data = [
            {
                "name": "–ú–µ–±–µ–ª—å–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞ '–î—É–±'",
                "activity": "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –º–µ–±–µ–ª–∏",
                "city": "–ú–æ—Å–∫–≤–∞",
                "description": "–ü—Ä–æ–∏–∑–≤–æ–¥–∏–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –º–µ–±–µ–ª—å –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞. –†–∞–±–æ—Ç–∞–µ–º —Å 1995 –≥–æ–¥–∞."
            },
            {
                "name": "IT-–∫–æ–º–ø–∞–Ω–∏—è '–¢–µ—Ö–Ω–æ–°–æ—Ñ—Ç'", 
                "activity": "IT-—É—Å–ª—É–≥–∏",
                "city": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
                "description": "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏."
            },
            {
                "name": "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è '–°—Ç—Ä–æ–π–ú–∞—Å—Ç–µ—Ä'",
                "activity": "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", 
                "city": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
                "description": "–°—Ç—Ä–æ–∏–º –¥–æ–º–∞ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã. –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç."
            }
        ]
        
        for i, (user, company_data) in enumerate(zip(self.users, demo_companies_data), 1):
            company = Company(
                name=company_data["name"],
                slug=f"demo-company-{i}",
                logo=None,
                type="–û–û–û",
                trade_activity=TradeActivity.BOTH,
                business_type=BusinessType.BOTH,
                activity_type=company_data["activity"],
                description=company_data["description"],
                country="–†–æ—Å—Å–∏—è",
                federal_district="–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥" if i == 1 else "–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥" if i == 2 else "–£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥",
                region="–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" if i == 1 else "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" if i == 2 else "–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
                city=company_data["city"],
                full_name=f"–û–û–û '{company_data['name']}'",
                inn=f"{random.randint(1000000000, 9999999999)}",
                ogrn=f"{random.randint(1000000000000, 9999999999999)}",
                kpp=f"{random.randint(100000000, 999999999)}",
                registration_date=datetime.now() - timedelta(days=random.randint(1000, 5000)),
                legal_address=f"{company_data['city']}, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, –¥.{i}",
                production_address=f"{company_data['city']}, –ø—Ä. –ó–∞–≤–æ–¥—Å–∫–æ–π, –¥.{i}",
                phone=f"+7 9{random.randint(10, 99)} {random.randint(100, 999)}-{random.randint(10, 99)}-{random.randint(10, 99)}",
                email=f"info@{company_data['name'].lower().replace(' ', '').replace("'", '')}.ru",
                website=f"www.{company_data['name'].lower().replace(' ', '').replace("'", '')}.ru",
                total_views=random.randint(1000, 50000),
                monthly_views=random.randint(100, 5000),
                total_purchases=random.randint(50, 1000),
                user_id=user.id,
                is_active=True
            )
            self.session.add(company)
            self.companies.append(company)
        
        await self.session.flush()
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        demo_products = [
            {
                "name": "–î–∏–≤–∞–Ω —É–≥–ª–æ–≤–æ–π '–ü—Ä–µ–º–∏—É–º'",
                "description": "–£–≥–ª–æ–≤–æ–π –¥–∏–≤–∞–Ω –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∫–æ–∂–∏. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω, –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç.",
                "price": 125000.00,
                "characteristics": [
                    {"key": "–ú–∞—Ç–µ—Ä–∏–∞–ª", "value": "–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –∫–æ–∂–∞"},
                    {"key": "–¶–≤–µ—Ç", "value": "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π"},
                    {"key": "–†–∞–∑–º–µ—Ä", "value": "–ë–æ–ª—å—à–æ–π"}
                ],
                "company_index": 0
            },
            {
                "name": "–ö—Ä–æ–≤–∞—Ç—å –¥–≤—É—Å–ø–∞–ª—å–Ω–∞—è '–ö–ª–∞—Å—Å–∏–∫'",
                "description": "–î–≤—É—Å–ø–∞–ª—å–Ω–∞—è –∫—Ä–æ–≤–∞—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞ –¥—É–±–∞. –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å.",
                "price": 85000.00,
                "characteristics": [
                    {"key": "–ú–∞—Ç–µ—Ä–∏–∞–ª", "value": "–ú–∞—Å—Å–∏–≤ –¥—É–±–∞"},
                    {"key": "–¶–≤–µ—Ç", "value": "–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π"},
                    {"key": "–†–∞–∑–º–µ—Ä", "value": "200x160 —Å–º"}
                ],
                "company_index": 0
            },
            {
                "name": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-—Å–∞–π—Ç–∞ '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π'",
                "description": "–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –≤–µ–±-—Å–∞–π—Ç–∞. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω.",
                "price": 250000.00,
                "characteristics": [
                    {"key": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "value": "React, Node.js, PostgreSQL"},
                    {"key": "–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", "value": "2 –º–µ—Å—è—Ü–∞"},
                    {"key": "–°–ª–æ–∂–Ω–æ—Å—Ç—å", "value": "–í—ã—Å–æ–∫–∞—è"}
                ],
                "company_index": 1,
                "type": ProductType.SERVICE
            },
            {
                "name": "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '–ë–∏–∑–Ω–µ—Å'",
                "description": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iOS –∏ Android. –ù–∞—Ç–∏–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞.",
                "price": 500000.00,
                "characteristics": [
                    {"key": "–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã", "value": "iOS, Android"},
                    {"key": "–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", "value": "3 –º–µ—Å—è—Ü–∞"},
                    {"key": "–°–ª–æ–∂–Ω–æ—Å—Ç—å", "value": "–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è"}
                ],
                "company_index": 1,
                "type": ProductType.SERVICE
            },
            {
                "name": "–ö–æ—Ç—Ç–µ–¥–∂ '–°–µ–º–µ–π–Ω—ã–π' 150–º¬≤",
                "description": "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∫–æ—Ç—Ç–µ–¥–∂–∞ –ø–æ–¥ –∫–ª—é—á. –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.",
                "price": 3500000.00,
                "characteristics": [
                    {"key": "–ü–ª–æ—â–∞–¥—å", "value": "150 –º¬≤"},
                    {"key": "–ú–∞—Ç–µ—Ä–∏–∞–ª", "value": "–ö–∏—Ä–ø–∏—á"},
                    {"key": "–°—Ä–æ–∫ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞", "value": "6 –º–µ—Å—è—Ü–µ–≤"}
                ],
                "company_index": 2,
                "type": ProductType.SERVICE
            }
        ]
        
        for i, product_data in enumerate(demo_products, 1):
            product_type = product_data.get("type", ProductType.GOOD)
            company = self.companies[product_data["company_index"]]
            
            product = Product(
                name=product_data["name"],
                slug=f"demo-{product_type.value.lower()}-{i}",
                description=product_data["description"],
                article=f"D{i:06}",
                type=product_type,
                price=product_data["price"],
                images=[],
                characteristics=product_data["characteristics"],
                is_hidden=False,
                is_deleted=False,
                unit_of_measurement="—à—Ç" if product_type == ProductType.GOOD else "–ø—Ä–æ–µ–∫—Ç",
                company_id=company.id
            )
            self.session.add(product)
            if product_type == ProductType.GOOD:
                self.products.append(product)
            else:
                self.services.append(product)
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        demo_announcements = [
            {
                "title": "–ò—â–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã",
                "content": "–ú–µ–±–µ–ª—å–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞ '–î—É–±' –∏—â–µ—Ç –Ω–∞–¥–µ–∂–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã. –ì–æ—Ç–æ–≤—ã –∫ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É.",
                "category": "–ü–æ–∫—É–ø–∫–∞",
                "company_index": 0
            },
            {
                "title": "–ü—Ä–æ–¥–∞–µ–º –º–µ–±–µ–ª—å —Å–æ —Å–∫–ª–∞–¥–∞",
                "content": "–ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≥–æ—Ç–æ–≤–æ–π –º–µ–±–µ–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞. –°–∫–∏–¥–∫–∏ –¥–æ 30%. –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–æ—Å–∫–≤–µ –∏ –æ–±–ª–∞—Å—Ç–∏.",
                "category": "–ü—Ä–æ–¥–∞–∂–∞", 
                "company_index": 0
            },
            {
                "title": "–ò—â–µ–º IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤",
                "content": "IT-–∫–æ–º–ø–∞–Ω–∏—è '–¢–µ—Ö–Ω–æ–°–æ—Ñ—Ç' –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞.",
                "category": "–í–∞–∫–∞–Ω—Å–∏–∏",
                "company_index": 1
            },
            {
                "title": "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å–ª—É–≥–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
                "content": "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–µ–±-—Å–∞–π—Ç—ã, –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.",
                "category": "–£—Å–ª—É–≥–∏",
                "company_index": 1
            },
            {
                "title": "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –¥–æ–º–æ–≤ –ø–æ–¥ –∫–ª—é—á",
                "content": "–°—Ç—Ä–æ–∏–º –¥–æ–º–∞ –∏ –∫–æ—Ç—Ç–µ–¥–∂–∏ –ø–æ–¥ –∫–ª—é—á. –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –≥–∞—Ä–∞–Ω—Ç–∏—è.",
                "category": "–£—Å–ª—É–≥–∏",
                "company_index": 2
            },
            {
                "title": "–ò—â–µ–º —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
                "content": "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è '–°—Ç—Ä–æ–π–ú–∞—Å—Ç–µ—Ä' –∏—â–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∫–∏—Ä–ø–∏—á–∞, –±–µ—Ç–æ–Ω–∞, –∞—Ä–º–∞—Ç—É—Ä—ã.",
                "category": "–ü–æ–∫—É–ø–∫–∞",
                "company_index": 2
            }
        ]
        
        for announcement_data in demo_announcements:
            company = self.companies[announcement_data["company_index"]]
            
            announcement = Announcement(
                title=announcement_data["title"],
                content=announcement_data["content"],
                category=announcement_data["category"],
                images=[],
                published=True,
                company_id=company.id
            )
            self.session.add(announcement)
            self.announcements.append(announcement)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞"""
    print("üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    async with AsyncSessionLocal() as session:
        seeder = DemoSeeder()
        seeder.session = session
        
        # –û—á–∏—â–∞–µ–º –±–∞–∑—É
        print("üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
        await seeder._clear_database()
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        await seeder.create_demo_data()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        await seeder.session.commit()
        
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")
        print("\nüìä –°–æ–∑–¥–∞–Ω–æ:")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(seeder.users)}")
        print(f"üè¢ –ö–æ–º–ø–∞–Ω–∏–π: {len(seeder.companies)}")
        print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤: {len(seeder.products)}")
        print(f"üîß –£—Å–ª—É–≥: {len(seeder.services)}")
        print(f"üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏–π: {len(seeder.announcements)}")
        
        print("\nüéØ –ü—Ä–∏–º–µ—Ä—ã —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        for user in seeder.users:
            print(f"   - {user.first_name} {user.last_name} ({user.email}) - {user.position}")
        
        print("\nüè¢ –ö–æ–º–ø–∞–Ω–∏–∏:")
        for company in seeder.companies:
            print(f"   - {company.name} ({company.city}) - {company.activity_type}")
        
        print("\nüì¶ –¢–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏:")
        for product in seeder.products + seeder.services:
            print(f"   - {product.name} - {product.price:,.0f} —Ä—É–±. ({product.company.name})")


if __name__ == "__main__":
    asyncio.run(main())
