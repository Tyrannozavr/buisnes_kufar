#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è –ë–µ–ª–∞—Ä—É—Å–∏, –£–∫—Ä–∞–∏–Ω—ã –∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞
"""

import asyncio
import sys
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(str(Path(__file__).parent))

from app.db.base import AsyncSessionLocal
from app.api.common.models.region import Region
from sqlalchemy import text


async def add_regions_for_other_countries():
    """–î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è –ë–µ–ª–∞—Ä—É—Å–∏, –£–∫—Ä–∞–∏–Ω—ã –∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞"""
    print("üó∫Ô∏è –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω...")
    
    # –†–µ–≥–∏–æ–Ω—ã –ë–µ–ª–∞—Ä—É—Å–∏
    belarus_regions = [
        (86, 0, 3, '–ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MINSK'),
        (87, 0, 3, '–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'GOMEL'),
        (88, 0, 3, '–ú–æ–≥–∏–ª—ë–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MOGILEV'),
        (89, 0, 3, '–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'VITEBSK'),
        (90, 0, 3, '–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'GRODNO'),
        (91, 0, 3, '–ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'BREST'),
    ]
    
    # –†–µ–≥–∏–æ–Ω—ã –£–∫—Ä–∞–∏–Ω—ã
    ukraine_regions = [
        (92, 0, 2, '–ö–∏–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KIEV'),
        (93, 0, 2, '–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KHARKOV'),
        (94, 0, 2, '–û–¥–µ—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ODESSA'),
        (95, 0, 2, '–î–Ω–µ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'DNEPR'),
        (96, 0, 2, '–î–æ–Ω–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'DONETSK'),
        (97, 0, 2, '–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ZAPOROZHYE'),
        (98, 0, 2, '–õ—å–≤–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'LVIV'),
        (99, 0, 2, '–ö—Ä–∏–≤–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KRYVYI_RIH'),
        (100, 0, 2, '–ù–∏–∫–æ–ª–∞–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'NIKOLAEV'),
        (101, 0, 2, '–ú–∞—Ä–∏—É–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MARIUPOL'),
        (102, 0, 2, '–õ—É–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'LUGANSK'),
        (103, 0, 2, '–í–∏–Ω–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'VINNYTSIA'),
        (104, 0, 2, '–ú–∞–∫–µ–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MAKEEVKA'),
        (105, 0, 2, '–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SIMFEROPOL'),
        (106, 0, 2, '–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SEVASTOPOL'),
        (107, 0, 2, '–•–µ—Ä—Å–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KHERSON'),
        (108, 0, 2, '–ü–æ–ª—Ç–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'POLTAVA'),
        (109, 0, 2, '–ß–µ—Ä–Ω–∏–≥–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'CHERNIHIV'),
        (110, 0, 2, '–ß–µ—Ä–∫–∞—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'CHERKASY'),
        (111, 0, 2, '–ñ–∏—Ç–æ–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ZHYTOMYR'),
        (112, 0, 2, '–°—É–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SUMY'),
        (113, 0, 2, '–•–º–µ–ª—å–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KHMELNYTSKYI'),
        (114, 0, 2, '–ß–µ—Ä–Ω–æ–≤–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'CHERNIVTSI'),
        (115, 0, 2, '–†–æ–≤–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'RIVNE'),
    ]
    
    # –†–µ–≥–∏–æ–Ω—ã –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞
    kazakhstan_regions = [
        (116, 0, 4, '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ALMATY'),
        (117, 0, 4, '–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'AKMOLA'),
        (118, 0, 4, '–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SOUTH_KAZAKHSTAN'),
        (119, 0, 4, '–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'AKTOBE'),
        (120, 0, 4, '–ñ–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ZHAMBYL'),
        (121, 0, 4, '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'PAVLODAR'),
        (122, 0, 4, '–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'EAST_KAZAKHSTAN'),
        (123, 0, 4, '–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'WEST_KAZAKHSTAN'),
        (124, 0, 4, '–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'NORTH_KAZAKHSTAN'),
        (125, 0, 4, '–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KYZYLORDA'),
        (126, 0, 4, '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KOSTANAY'),
        (127, 0, 4, '–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ATYRAU'),
        (128, 0, 4, '–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KARAGANDA'),
        (129, 0, 4, '–¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'TURKESTAN'),
        (130, 0, 4, '–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MANGYSTAU'),
    ]
    
    all_regions = belarus_regions + ukraine_regions + kazakhstan_regions
    
    async with AsyncSessionLocal() as db:
        now = datetime.utcnow()
        for region_id, federal_district_id, country_id, name, code in all_regions:
            region = Region(
                id=region_id,
                federal_district_id=federal_district_id if federal_district_id > 0 else None,
                country_id=country_id,
                name=name,
                code=code,
                is_active=True,
                created_at=now,
                updated_at=now
            )
            db.add(region)
        await db.commit()
    
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(all_regions)} —Ä–µ–≥–∏–æ–Ω–æ–≤:")
    print(f"   üáßüáæ –ë–µ–ª–∞—Ä—É—Å—å: {len(belarus_regions)} —Ä–µ–≥–∏–æ–Ω–æ–≤")
    print(f"   üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞: {len(ukraine_regions)} —Ä–µ–≥–∏–æ–Ω–æ–≤")
    print(f"   üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω: {len(kazakhstan_regions)} —Ä–µ–≥–∏–æ–Ω–æ–≤")


async def update_cities_regions():
    """–û–±–Ω–æ–≤–ª—è–µ–º –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã –æ–Ω–∏ —Å—Å—ã–ª–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã"""
    print("üèôÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è –≥–æ—Ä–æ–¥–æ–≤...")
    
    # –ú–∞–ø–ø–∏–Ω–≥ –≥–æ—Ä–æ–¥–æ–≤ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º
    city_region_mapping = {
        # –ë–µ–ª–∞—Ä—É—Å—å
        101: 86,  # –ú–∏–Ω—Å–∫ -> –ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        102: 87,  # –ì–æ–º–µ–ª—å -> –ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        103: 88,  # –ú–æ–≥–∏–ª—ë–≤ -> –ú–æ–≥–∏–ª—ë–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        104: 89,  # –í–∏—Ç–µ–±—Å–∫ -> –í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        105: 90,  # –ì—Ä–æ–¥–Ω–æ -> –ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        106: 91,  # –ë—Ä–µ—Å—Ç -> –ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        107: 88,  # –ë–æ–±—Ä—É–π—Å–∫ -> –ú–æ–≥–∏–ª—ë–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        108: 86,  # –ë–∞—Ä–∞–Ω–æ–≤–∏—á–∏ -> –ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        109: 86,  # –ë–æ—Ä–∏—Å–æ–≤ -> –ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        110: 91,  # –ü–∏–Ω—Å–∫ -> –ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        111: 89,  # –û—Ä—à–∞ -> –í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        112: 87,  # –ú–æ–∑—ã—Ä—å -> –ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        113: 86,  # –°–æ–ª–∏–≥–æ—Ä—Å–∫ -> –ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        114: 89,  # –ù–æ–≤–æ–ø–æ–ª–æ—Ü–∫ -> –í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        115: 90,  # –õ–∏–¥–∞ -> –ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        
        # –£–∫—Ä–∞–∏–Ω–∞
        77: 92,   # –ö–∏–µ–≤ -> –ö–∏–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        78: 93,   # –•–∞—Ä—å–∫–æ–≤ -> –•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        79: 94,   # –û–¥–µ—Å—Å–∞ -> –û–¥–µ—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        80: 95,   # –î–Ω–µ–ø—Ä -> –î–Ω–µ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        81: 96,   # –î–æ–Ω–µ—Ü–∫ -> –î–æ–Ω–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        82: 97,   # –ó–∞–ø–æ—Ä–æ–∂—å–µ -> –ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        83: 98,   # –õ—å–≤–æ–≤ -> –õ—å–≤–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        84: 99,   # –ö—Ä–∏–≤–æ–π –†–æ–≥ -> –ö—Ä–∏–≤–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        85: 100,  # –ù–∏–∫–æ–ª–∞–µ–≤ -> –ù–∏–∫–æ–ª–∞–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        86: 101,  # –ú–∞—Ä–∏—É–ø–æ–ª—å -> –ú–∞—Ä–∏—É–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        87: 102,  # –õ—É–≥–∞–Ω—Å–∫ -> –õ—É–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        88: 103,  # –í–∏–Ω–Ω–∏—Ü–∞ -> –í–∏–Ω–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        89: 104,  # –ú–∞–∫–µ–µ–≤–∫–∞ -> –ú–∞–∫–µ–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        90: 105,  # –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å -> –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        91: 106,  # –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å -> –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        92: 107,  # –•–µ—Ä—Å–æ–Ω -> –•–µ—Ä—Å–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        93: 108,  # –ü–æ–ª—Ç–∞–≤–∞ -> –ü–æ–ª—Ç–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        94: 109,  # –ß–µ—Ä–Ω–∏–≥–æ–≤ -> –ß–µ—Ä–Ω–∏–≥–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        95: 110,  # –ß–µ—Ä–∫–∞—Å—Å—ã -> –ß–µ—Ä–∫–∞—Å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        96: 111,  # –ñ–∏—Ç–æ–º–∏—Ä -> –ñ–∏—Ç–æ–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        97: 112,  # –°—É–º—ã -> –°—É–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        98: 113,  # –•–º–µ–ª—å–Ω–∏—Ü–∫–∏–π -> –•–º–µ–ª—å–Ω–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        99: 114,  # –ß–µ—Ä–Ω–æ–≤—Ü—ã -> –ß–µ—Ä–Ω–æ–≤–∏—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        100: 115, # –†–æ–≤–Ω–æ -> –†–æ–≤–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        
        # –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
        116: 116, # –ê–ª–º–∞—Ç—ã -> –ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        117: 117, # –ê—Å—Ç–∞–Ω–∞ -> –ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        118: 118, # –®—ã–º–∫–µ–Ω—Ç -> –Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        119: 119, # –ê–∫—Ç–æ–±–µ -> –ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        120: 120, # –¢–∞—Ä–∞–∑ -> –ñ–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        121: 121, # –ü–∞–≤–ª–æ–¥–∞—Ä -> –ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        122: 122, # –°–µ–º–µ–π -> –í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        123: 123, # –£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫ -> –í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        124: 124, # –£—Ä–∞–ª—å—Å–∫ -> –ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        125: 125, # –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫ -> –°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        126: 126, # –ö—ã–∑—ã–ª–æ—Ä–¥–∞ -> –ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        127: 127, # –ö–æ—Å—Ç–∞–Ω–∞–π -> –ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        128: 128, # –ê—Ç—ã—Ä–∞—É -> –ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        129: 128, # –¢–µ–º–∏—Ä—Ç–∞—É -> –ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        130: 129, # –¢—É—Ä–∫–µ—Å—Ç–∞–Ω -> –¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        131: 117, # –ö–æ–∫—à–µ—Ç–∞—É -> –ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        132: 116, # –¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω -> –ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        133: 128, # –≠–∫–∏–±–∞—Å—Ç—É–∑ -> –ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        134: 127, # –†—É–¥–Ω—ã–π -> –ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
    }
    
    async with AsyncSessionLocal() as db:
        for city_id, region_id in city_region_mapping.items():
            await db.execute(
                text("UPDATE cities SET region_id = :region_id WHERE id = :city_id"),
                {"region_id": region_id, "city_id": city_id}
            )
        await db.commit()
    
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {len(city_region_mapping)} –≥–æ—Ä–æ–¥–æ–≤")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω...")
    
    try:
        await add_regions_for_other_countries()
        await update_cities_regions()
        
        print("\nüéâ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        async with AsyncSessionLocal() as db:
            from sqlalchemy import text
            result = await db.execute(text("SELECT COUNT(*) FROM regions WHERE country_id IN (2, 3, 4)"))
            regions_count = result.scalar()
            result = await db.execute(text("SELECT COUNT(*) FROM cities WHERE country_id IN (2, 3, 4) AND region_id IS NOT NULL"))
            cities_with_regions = result.scalar()
            
            print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   üó∫Ô∏è –†–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω: {regions_count}")
            print(f"   üèôÔ∏è –ì–æ—Ä–æ–¥–æ–≤ —Å —Ä–µ–≥–∏–æ–Ω–∞–º–∏: {cities_with_regions}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤: {e}")
        raise


if __name__ == "__main__":
    asyncio.run(main())
