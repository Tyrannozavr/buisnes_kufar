#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –Ω–∏—Ö
"""

import asyncio
import random
import sys
from pathlib import Path
from datetime import datetime

sys.path.append(str(Path(__file__).parent))

from sqlalchemy import select
from app.db.base import AsyncSessionLocal
from app.api.company.models.company import Company, BusinessType, TradeActivity
from app.api.common.models.city import City
from app.api.products.models.product import Product, ProductType


COMPANY_NAMES = [
    "–°—Ç—Ä–æ–π–ú–∞—Ä–∫–µ—Ç", "–°—Ç—Ä–æ–π–°–µ—Ä–≤–∏—Å", "–°—Ç—Ä–æ–π–ì–∞—Ä–∞–Ω—Ç", "–°—Ç—Ä–æ–π–≠–∫—Å–ø–µ—Ä—Ç",
    "–°—Ç—Ä–æ–π–ü–ª—é—Å", "–°—Ç—Ä–æ–π–ü—Ä–æ", "–°—Ç—Ä–æ–π–õ–æ–≥–∏—Å—Ç–∏–∫", "–°—Ç—Ä–æ–π–¶–µ–Ω—Ç—Ä",
    "–°—Ç—Ä–æ–π–ö–æ–Ω—Å–∞–ª—Ç", "–°—Ç—Ä–æ–π–ò–º–ø–æ—Ä—Ç", "–°—Ç—Ä–æ–π–¢–µ—Ö", "–°—Ç—Ä–æ–π–°–Ω–∞–±",
    "–°—Ç—Ä–æ–π–¢–æ—Ä–≥", "–°—Ç—Ä–æ–π–û–ø—Ç", "–°—Ç—Ä–æ–π–•–æ–∑", "–°—Ç—Ä–æ–π–¢—Ä–µ–π–¥",
    "–°—Ç—Ä–æ–π–ö–æ–º–ø–ª–µ–∫—Ç", "–°—Ç—Ä–æ–π–ê–ª—å—è–Ω—Å", "–°—Ç—Ä–æ–π–§–æ—Ä—É–º", "–°—Ç—Ä–æ–π–î–æ–º"
]

PRODUCT_NAMES = [
    "–¶–µ–º–µ–Ω—Ç", "–ö–∏—Ä–ø–∏—á", "–ë–µ—Ç–æ–Ω", "–ê—Ä–º–∞—Ç—É—Ä–∞", "–ü–ª–∏—Ç–∫–∞", "–°–∞–π–¥–∏–Ω–≥",
    "–ü—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª", "–ì–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω", "–í–∞–≥–æ–Ω–∫–∞", "–û–°–ü", "–§–∞–Ω–µ—Ä–∞",
    "–î–°–ü", "–î–æ—Å–∫–∞", "–ë—Ä—É—Å", "–†—É–±–µ—Ä–æ–∏–¥", "–ú–µ—Ç–∞–ª–ª–æ—á–µ—Ä–µ–ø–∏—Ü–∞"
]

SERVICE_NAMES = [
    "–£–∫–ª–∞–¥–∫–∞ –ø–ª–∏—Ç–∫–∏", "–ú–æ–Ω—Ç–∞–∂ –ø–æ—Ç–æ–ª–∫–∞", "–ú–æ–Ω—Ç–∞–∂ —Å—Ç–µ–Ω", "–£—Ç–µ–ø–ª–µ–Ω–∏–µ",
    "–ü–æ–∫—Ä–∞—Å–∫–∞", "–û–∫–ª–µ–π–∫–∞ –æ–±–æ—è–º–∏", "–®—Ç—É–∫–∞—Ç—É—Ä–∫–∞", "–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞"
]

UNITS = ["—à—Ç", "–∫–≥", "—Ç", "–º¬≤", "–º¬≥", "–º", "–ø.–º"]

def generate_slug(name: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç slug –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"""
    import re
    return re.sub(r'[^\w\s-]', '', name.lower()).strip().replace(' ', '-')


async def create_companies_in_cities():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –∏ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –Ω–∏—Ö"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö...")
    
    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
        result = await session.execute(select(City).limit(10).offset(random.randint(0, 2600)))
        cities = result.scalars().all()
        
        if len(cities) == 0:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≥–æ—Ä–æ–¥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(cities)} –≥–æ—Ä–æ–¥–æ–≤")
        
        companies_created = 0
        products_created = 0
        existing_slugs = set()
        
        for i, city in enumerate(cities):
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
            base_name = random.choice(COMPANY_NAMES)
            name = f"{base_name} {i+1}"
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π slug
            base_slug = generate_slug(name)
            slug = base_slug
            counter = 1
            while slug in existing_slugs:
                slug = f"{base_slug}-{counter}"
                counter += 1
            existing_slugs.add(slug)
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é
            company = Company(
                name=name,
                slug=slug,
                type="–û–û–û",
                trade_activity=random.choice(list(TradeActivity)),
                business_type=random.choice(list(BusinessType)),
                activity_type="–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
                description=f"–ö–æ–º–ø–∞–Ω–∏—è {name} –≤ –≥–æ—Ä–æ–¥–µ {city.name}",
                country="–†–æ—Å—Å–∏—è",
                federal_district="",
                region="",
                city=city.name,
                country_id=1,
                federal_district_id=city.federal_district_id,
                region_id=city.region_id,
                city_id=city.id,
                full_name=f"{name} - –ø–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ",
                inn=f"{random.randint(1000000000, 9999999999)}",
                ogrn=f"{random.randint(1000000000000, 9999999999999)}",
                kpp=f"{random.randint(100000000, 999999999)}",
                registration_date=datetime.now(),
                legal_address=f"–≥. {city.name}, —É–ª. –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è, –¥. {random.randint(1, 100)}",
                production_address=f"–≥. {city.name}, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, –¥. {random.randint(1, 100)}",
                phone=f"+7{random.randint(9100000000, 9999999999)}",
                email=f"{generate_slug(name)}@mail.ru",
                website=f"https://{generate_slug(name)}.ru",
                total_views=0,
                monthly_views=0,
                total_purchases=0,
                is_active=True
            )
            
            session.add(company)
            await session.flush()
            companies_created += 1
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è {companies_created}: {name} –≤ {city.name}")
            
            # –°–æ–∑–¥–∞–µ–º 2-3 –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
            num_products = random.randint(2, 3)
            for j in range(num_products):
                is_service = random.random() < 0.4
                
                if is_service:
                    product_name = random.choice(SERVICE_NAMES)
                    product_type = ProductType.SERVICE
                    unit = "—á–∞—Å"
                else:
                    product_name = random.choice(PRODUCT_NAMES)
                    product_type = ProductType.GOOD
                    unit = random.choice(UNITS)
                
                unique_name = f"{product_name} {city.name}"
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π slug –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞
                base_slug = generate_slug(unique_name)
                slug_prod = base_slug
                counter = 1
                while slug_prod in existing_slugs:
                    slug_prod = f"{base_slug}-{counter}"
                    counter += 1
                existing_slugs.add(slug_prod)
                
                product = Product(
                    name=unique_name,
                    slug=slug_prod,
                    description=f"–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π {product_name.lower()} –≤ –≥–æ—Ä–æ–¥–µ {city.name}",
                    article=f"ART-{random.randint(100000, 999999)}",
                    type=product_type,
                    price=random.uniform(1000, 50000),
                    images=[],
                    characteristics=[
                        {"name": "–ú–∞—Ç–µ—Ä–∏–∞–ª", "value": "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"},
                        {"name": "–†–∞–∑–º–µ—Ä", "value": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π"}
                    ],
                    is_hidden=False,
                    is_deleted=False,
                    unit_of_measurement=unit,
                    company_id=company.id
                )
                
                session.add(product)
                products_created += 1
            
            # –î–µ–ª–∞–µ–º commit –∫–∞–∂–¥—ã–µ 5 –∫–æ–º–ø–∞–Ω–∏–π
            if companies_created % 5 == 0:
                await session.commit()
                print(f"   –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {companies_created} –∫–æ–º–ø–∞–Ω–∏–π —Å {products_created} –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏...")
        
        await session.commit()
        
        print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {companies_created} –∫–æ–º–ø–∞–Ω–∏–π —Å {products_created} –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö!")


if __name__ == "__main__":
    asyncio.run(create_companies_in_cities())

