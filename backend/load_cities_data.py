#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ—Ä–æ–¥–∞—Ö –∏–∑ –¥–∞–º–ø–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(str(Path(__file__).parent))

from app.db.base import AsyncSessionLocal
from app.api.common.models.country import Country
from app.api.common.models.federal_district import FederalDistrict
from app.api.common.models.region import Region
from app.api.common.models.city import City
from sqlalchemy import text
from sqlalchemy.exc import IntegrityError


async def clear_existing_data():
    """–û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ"""
    print("üßπ –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...")
    async with AsyncSessionLocal() as db:
        # –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–∑-–∑–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        await db.execute(text("DELETE FROM cities"))
        await db.execute(text("DELETE FROM regions"))
        await db.execute(text("DELETE FROM federal_districts"))
        await db.execute(text("DELETE FROM countries"))
        await db.commit()
    print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")


async def load_countries():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω—ã"""
    print("üåç –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω—ã...")
    countries_data = [
        (1, '–†–æ—Å—Å–∏—è', 'RU'),
        (2, '–£–∫—Ä–∞–∏–Ω–∞', 'UA'),
        (3, '–ë–µ–ª–∞—Ä—É—Å—å', 'BY'),
        (4, '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', 'KZ'),
    ]
    
    async with AsyncSessionLocal() as db:
        now = datetime.utcnow()
        for country_id, name, code in countries_data:
            country = Country(
                id=country_id,
                name=name,
                code=code,
                is_active=True,
                created_at=now,
                updated_at=now
            )
            db.add(country)
        await db.commit()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(countries_data)} —Å—Ç—Ä–∞–Ω")


async def load_federal_districts():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–≥–∞"""
    print("üèõÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–≥–∞...")
    districts_data = [
        (1, 1, '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD1'),
        (2, 1, '–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD2'),
        (3, 1, '–Æ–∂–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD3'),
        (4, 1, '–ü—Ä–∏–≤–æ–ª–∂—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD4'),
        (5, 1, '–£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD5'),
        (6, 1, '–°–∏–±–∏—Ä—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD6'),
        (7, 1, '–î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD7'),
        (8, 1, '–°–µ–≤–µ—Ä–æ-–ö–∞–≤–∫–∞–∑—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥', 'FD8'),
    ]
    
    async with AsyncSessionLocal() as db:
        now = datetime.utcnow()
        for district_id, country_id, name, code in districts_data:
            district = FederalDistrict(
                id=district_id,
                country_id=country_id,
                name=name,
                code=code,
                is_active=True,
                created_at=now,
                updated_at=now
            )
            db.add(district)
        await db.commit()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(districts_data)} —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –æ–∫—Ä—É–≥–æ–≤")


async def load_regions():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–≥–∏–æ–Ω—ã"""
    print("üó∫Ô∏è –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–≥–∏–æ–Ω—ã...")
    
    # –î–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω–æ–≤ –∏–∑ –¥–∞–º–ø–∞
    regions_data = [
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (1, 1, 1, '–ú–æ—Å–∫–≤–∞', 'MOW'),
        (2, 1, 1, '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MO'),
        (3, 1, 1, '–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'BEL'),
        (4, 1, 1, '–ë—Ä—è–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'BRY'),
        (5, 1, 1, '–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'VLA'),
        (6, 1, 1, '–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'VOR'),
        (7, 1, 1, '–ò–≤–∞–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'IVA'),
        (8, 1, 1, '–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KLU'),
        (9, 1, 1, '–ö–æ—Å—Ç—Ä–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KOS'),
        (10, 1, 1, '–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KRS'),
        (11, 1, 1, '–õ–∏–ø–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'LIP'),
        (12, 1, 1, '–û—Ä–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ORL'),
        (13, 1, 1, '–†—è–∑–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'RYA'),
        (14, 1, 1, '–°–º–æ–ª–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SMO'),
        (15, 1, 1, '–¢–∞–º–±–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'TAM'),
        (16, 1, 1, '–¢–≤–µ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'TVE'),
        (17, 1, 1, '–¢—É–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'TUL'),
        (18, 1, 1, '–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'YAR'),
        
        # –°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (19, 2, 1, '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', 'SPE'),
        (20, 2, 1, '–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'LEN'),
        (21, 2, 1, '–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ARK'),
        (22, 2, 1, '–í–æ–ª–æ–≥–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'VLG'),
        (23, 2, 1, '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KGD'),
        (24, 2, 1, '–ö–∞—Ä–µ–ª–∏—è', 'KR'),
        (25, 2, 1, '–ö–æ–º–∏', 'KO'),
        (26, 2, 1, '–ú—É—Ä–º–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MUR'),
        (27, 2, 1, '–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥', 'NEN'),
        (28, 2, 1, '–ù–æ–≤–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'NGR'),
        (29, 2, 1, '–ü—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'PSK'),
        
        # –Æ–∂–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (30, 3, 1, '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'AST'),
        (31, 3, 1, '–í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'VGG'),
        (32, 3, 1, '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π', 'KDA'),
        (33, 3, 1, '–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ROS'),
        (34, 3, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–¥—ã–≥–µ—è', 'AD'),
        (35, 3, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞–ª–º—ã–∫–∏—è', 'KL'),
        (36, 3, 1, '–ö—Ä—ã–º', 'CR'),
        (37, 3, 1, '–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å', 'SEV'),
        
        # –ü—Ä–∏–≤–æ–ª–∂—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (38, 4, 1, '–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'NIZ'),
        (39, 4, 1, '–ö–∏—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KIR'),
        (40, 4, 1, '–°–∞–º–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SAM'),
        (41, 4, 1, '–°–∞—Ä–∞—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SAR'),
        (42, 4, 1, '–£–ª—å—è–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ULY'),
        (43, 4, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω', 'BA'),
        (44, 4, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–∞—Ä–∏–π –≠–ª', 'ME'),
        (45, 4, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–æ—Ä–¥–æ–≤–∏—è', 'MO'),
        (46, 4, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω', 'TA'),
        (47, 4, 1, '–£–¥–º—É—Ä—Ç—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞', 'UD'),
        (48, 4, 1, '–ß—É–≤–∞—à—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞', 'CU'),
        (49, 4, 1, '–ü–µ—Ä–º—Å–∫–∏–π –∫—Ä–∞–π', 'PER'),
        (50, 4, 1, '–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'ORE'),
        (51, 4, 1, '–ü–µ–Ω–∑–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'PNZ'),
        
        # –£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (52, 5, 1, '–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SVE'),
        (53, 5, 1, '–¢—é–º–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'TYU'),
        (54, 5, 1, '–ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'CHE'),
        (55, 5, 1, '–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥', 'KHM'),
        (56, 5, 1, '–Ø–º–∞–ª–æ-–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥', 'YAN'),
        (57, 5, 1, '–ö—É—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KGN'),
        
        # –°–∏–±–∏—Ä—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (58, 6, 1, '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'NVS'),
        (59, 6, 1, '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π', 'KYA'),
        (60, 6, 1, '–ò—Ä–∫—É—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'IRK'),
        (61, 6, 1, '–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'KEM'),
        (62, 6, 1, '–û–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'OMS'),
        (63, 6, 1, '–¢–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'TOM'),
        (64, 6, 1, '–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π', 'ALT'),
        (65, 6, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–ª—Ç–∞–π', 'AL'),
        (66, 6, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë—É—Ä—è—Ç–∏—è', 'BU'),
        (67, 6, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢—ã–≤–∞', 'TY'),
        (68, 6, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –•–∞–∫–∞—Å–∏—è', 'KK'),
        (69, 6, 1, '–ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–∏–π –∫—Ä–∞–π', 'ZAB'),
        
        # –î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (70, 7, 1, '–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π', 'PRI'),
        (71, 7, 1, '–•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π –∫—Ä–∞–π', 'KHA'),
        (72, 7, 1, '–ê–º—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'AMU'),
        (73, 7, 1, '–ö–∞–º—á–∞—Ç—Å–∫–∏–π –∫—Ä–∞–π', 'KAM'),
        (74, 7, 1, '–ú–∞–≥–∞–¥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'MAG'),
        (75, 7, 1, '–°–∞—Ö–∞–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', 'SAK'),
        (76, 7, 1, '–ï–≤—Ä–µ–π—Å–∫–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –æ–±–ª–∞—Å—Ç—å', 'YEV'),
        (77, 7, 1, '–ß—É–∫–æ—Ç—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥', 'CHU'),
        (78, 7, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–∞—Ö–∞ (–Ø–∫—É—Ç–∏—è)', 'SA'),
        
        # –°–µ–≤–µ—Ä–æ-–ö–∞–≤–∫–∞–∑—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
        (79, 8, 1, '–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å—Å–∫–∏–π –∫—Ä–∞–π', 'STA'),
        (80, 8, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –î–∞–≥–µ—Å—Ç–∞–Ω', 'DA'),
        (81, 8, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ò–Ω–≥—É—à–µ—Ç–∏—è', 'IN'),
        (82, 8, 1, '–ö–∞–±–∞—Ä–¥–∏–Ω–æ-–ë–∞–ª–∫–∞—Ä—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞', 'KB'),
        (83, 8, 1, '–ö–∞—Ä–∞—á–∞–µ–≤–æ-–ß–µ—Ä–∫–µ—Å—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞', 'KC'),
        (84, 8, 1, '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è', 'SE'),
        (85, 8, 1, '–ß–µ—á–µ–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞', 'CE'),
    ]
    
    async with AsyncSessionLocal() as db:
        now = datetime.utcnow()
        for region_id, federal_district_id, country_id, name, code in regions_data:
            region = Region(
                id=region_id,
                federal_district_id=federal_district_id,
                country_id=country_id,
                name=name,
                code=code,
                is_active=True,
                created_at=now,
                updated_at=now
            )
            db.add(region)
        await db.commit()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(regions_data)} —Ä–µ–≥–∏–æ–Ω–æ–≤")


async def load_cities():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≥–æ—Ä–æ–¥–∞"""
    print("üèôÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≥–æ—Ä–æ–¥–∞...")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –†–æ—Å—Å–∏–∏
    cities_data = [
        # –ú–æ—Å–∫–≤–∞
        (1, 1, 1, 1, '–ú–æ—Å–∫–≤–∞', 12500000, True, True),
        
        # –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (2, 1, 2, 1, '–ü–æ–¥–æ–ª—å—Å–∫', 300000, False, False),
        (3, 1, 2, 1, '–•–∏–º–∫–∏', 250000, False, False),
        (4, 1, 2, 1, '–ë–∞–ª–∞—à–∏—Ö–∞', 500000, False, False),
        (5, 1, 2, 1, '–ö–æ—Ä–æ–ª—ë–≤', 200000, False, False),
        (6, 1, 2, 1, '–ú—ã—Ç–∏—â–∏', 200000, False, False),
        (7, 1, 2, 1, '–õ—é–±–µ—Ä—Ü—ã', 200000, False, False),
        (8, 1, 2, 1, '–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫', 150000, False, False),
        (9, 1, 2, 1, '–û–¥–∏–Ω—Ü–æ–≤–æ', 150000, False, False),
        (10, 1, 2, 1, '–°–µ—Ä–ø—É—Ö–æ–≤', 120000, False, False),
        
        # –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
        (11, 2, 19, 1, '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', 5500000, True, True),
        
        # –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (12, 2, 20, 1, '–ì–∞—Ç—á–∏–Ω–∞', 100000, False, False),
        (13, 2, 20, 1, '–í—ã–±–æ—Ä–≥', 80000, False, False),
        (14, 2, 20, 1, '–°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä', 70000, False, False),
        
        # –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π
        (15, 3, 32, 1, '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', 1000000, True, True),
        (16, 3, 32, 1, '–°–æ—á–∏', 500000, False, False),
        (17, 3, 32, 1, '–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫', 300000, False, False),
        (18, 3, 32, 1, '–ê—Ä–º–∞–≤–∏—Ä', 200000, False, False),
        (19, 3, 32, 1, '–ï–π—Å–∫', 100000, False, False),
        
        # –†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (20, 3, 33, 1, '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É', 1200000, True, True),
        (21, 3, 33, 1, '–¢–∞–≥–∞–Ω—Ä–æ–≥', 300000, False, False),
        (22, 3, 33, 1, '–®–∞—Ö—Ç—ã', 250000, False, False),
        (23, 3, 33, 1, '–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫', 200000, False, False),
        (24, 3, 33, 1, '–í–æ–ª–≥–æ–¥–æ–Ω—Å–∫', 200000, False, False),
        
        # –í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (25, 3, 31, 1, '–í–æ–ª–≥–æ–≥—Ä–∞–¥', 1000000, True, True),
        (26, 3, 31, 1, '–í–æ–ª–∂—Å–∫–∏–π', 300000, False, False),
        (27, 3, 31, 1, '–ö–∞–º—ã—à–∏–Ω', 100000, False, False),
        
        # –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (28, 4, 38, 1, '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', 1200000, True, True),
        (29, 4, 38, 1, '–î–∑–µ—Ä–∂–∏–Ω—Å–∫', 250000, False, False),
        (30, 4, 38, 1, '–ê—Ä–∑–∞–º–∞—Å', 100000, False, False),
        
        # –°–∞–º–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (31, 4, 40, 1, '–°–∞–º–∞—Ä–∞', 1200000, True, True),
        (32, 4, 40, 1, '–¢–æ–ª—å—è—Ç—Ç–∏', 700000, False, False),
        (33, 4, 40, 1, '–°—ã–∑—Ä–∞–Ω—å', 200000, False, False),
        (34, 4, 40, 1, '–ù–æ–≤–æ–∫—É–π–±—ã—à–µ–≤—Å–∫', 100000, False, False),
        
        # –†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω
        (35, 4, 46, 1, '–ö–∞–∑–∞–Ω—å', 1200000, True, True),
        (36, 4, 46, 1, '–ù–∞–±–µ—Ä–µ–∂–Ω—ã–µ –ß–µ–ª–Ω—ã', 500000, False, False),
        (37, 4, 46, 1, '–ù–∏–∂–Ω–µ–∫–∞–º—Å–∫', 250000, False, False),
        (38, 4, 46, 1, '–ê–ª—å–º–µ—Ç—å–µ–≤—Å–∫', 150000, False, False),
        
        # –†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω
        (39, 4, 43, 1, '–£—Ñ–∞', 1000000, True, True),
        (40, 4, 43, 1, '–°—Ç–µ—Ä–ª–∏—Ç–∞–º–∞–∫', 300000, False, False),
        (41, 4, 43, 1, '–°–∞–ª–∞–≤–∞—Ç', 200000, False, False),
        (42, 4, 43, 1, '–ù–µ—Ñ—Ç–µ–∫–∞–º—Å–∫', 150000, False, False),
        
        # –°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (43, 5, 52, 1, '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', 1500000, True, True),
        (44, 5, 52, 1, '–ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª', 400000, False, False),
        (45, 5, 52, 1, '–ö–∞–º–µ–Ω—Å–∫-–£—Ä–∞–ª—å—Å–∫–∏–π', 200000, False, False),
        (46, 5, 52, 1, '–ü–µ—Ä–≤–æ—É—Ä–∞–ª—å—Å–∫', 150000, False, False),
        
        # –ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (47, 5, 54, 1, '–ß–µ–ª—è–±–∏–Ω—Å–∫', 1200000, True, True),
        (48, 5, 54, 1, '–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫', 400000, False, False),
        (49, 5, 54, 1, '–ó–ª–∞—Ç–æ—É—Å—Ç', 200000, False, False),
        (50, 5, 54, 1, '–ú–∏–∞—Å—Å', 150000, False, False),
        
        # –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (51, 6, 58, 1, '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', 1600000, True, True),
        (52, 6, 58, 1, '–ë–µ—Ä–¥—Å–∫', 100000, False, False),
        
        # –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π
        (53, 6, 59, 1, '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', 1000000, True, True),
        (54, 6, 59, 1, '–ù–æ—Ä–∏–ª—å—Å–∫', 200000, False, False),
        (55, 6, 59, 1, '–ê—á–∏–Ω—Å–∫', 100000, False, False),
        
        # –ò—Ä–∫—É—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (56, 6, 60, 1, '–ò—Ä–∫—É—Ç—Å–∫', 600000, True, True),
        (57, 6, 60, 1, '–ë—Ä–∞—Ç—Å–∫', 250000, False, False),
        (58, 6, 60, 1, '–ê–Ω–≥–∞—Ä—Å–∫', 200000, False, False),
        
        # –ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (59, 6, 61, 1, '–ö–µ–º–µ—Ä–æ–≤–æ', 500000, True, True),
        (60, 6, 61, 1, '–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫', 500000, False, False),
        (61, 6, 61, 1, '–ü—Ä–æ–∫–æ–ø—å–µ–≤—Å–∫', 200000, False, False),
        
        # –û–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        (62, 6, 62, 1, '–û–º—Å–∫', 1200000, True, True),
        
        # –ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π
        (63, 6, 64, 1, '–ë–∞—Ä–Ω–∞—É–ª', 600000, True, True),
        (64, 6, 64, 1, '–ë–∏–π—Å–∫', 200000, False, False),
        
        # –ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π
        (65, 7, 70, 1, '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫', 600000, True, True),
        (66, 7, 70, 1, '–ù–∞—Ö–æ–¥–∫–∞', 200000, False, False),
        (67, 7, 70, 1, '–£—Å—Å—É—Ä–∏–π—Å–∫', 200000, False, False),
        
        # –•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π –∫—Ä–∞–π
        (68, 7, 71, 1, '–•–∞–±–∞—Ä–æ–≤—Å–∫', 600000, True, True),
        (69, 7, 71, 1, '–ö–æ–º—Å–æ–º–æ–ª—å—Å–∫-–Ω–∞-–ê–º—É—Ä–µ', 300000, False, False),
        
        # –°—Ç–∞–≤—Ä–æ–ø–æ–ª—å—Å–∫–∏–π –∫—Ä–∞–π
        (70, 8, 79, 1, '–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å', 500000, True, True),
        (71, 8, 79, 1, '–ü—è—Ç–∏–≥–æ—Ä—Å–∫', 200000, False, False),
        (72, 8, 79, 1, '–ö–∏—Å–ª–æ–≤–æ–¥—Å–∫', 150000, False, False),
        
        # –†–µ—Å–ø—É–±–ª–∏–∫–∞ –î–∞–≥–µ—Å—Ç–∞–Ω
        (73, 8, 80, 1, '–ú–∞—Ö–∞—á–∫–∞–ª–∞', 600000, True, True),
        (74, 8, 80, 1, '–î–µ—Ä–±–µ–Ω—Ç', 150000, False, False),
        
        # –†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è
        (75, 8, 84, 1, '–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑', 300000, True, True),
        
        # –ß–µ—á–µ–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞
        (76, 8, 85, 1, '–ì—Ä–æ–∑–Ω—ã–π', 300000, True, True),
        
        # –£–∫—Ä–∞–∏–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥–∏–æ–Ω 1 - –ú–æ—Å–∫–≤–∞ –∫–∞–∫ –∑–∞–≥–ª—É—à–∫—É)
        (77, 1, 1, 2, '–ö–∏–µ–≤', 3000000, True, True),
        (78, 1, 1, 2, '–•–∞—Ä—å–∫–æ–≤', 1500000, True, True),
        (79, 1, 1, 2, '–û–¥–µ—Å—Å–∞', 1000000, True, True),
        (80, 1, 1, 2, '–î–Ω–µ–ø—Ä', 1000000, True, True),
        (81, 1, 1, 2, '–î–æ–Ω–µ—Ü–∫', 1000000, True, True),
        (82, 1, 1, 2, '–ó–∞–ø–æ—Ä–æ–∂—å–µ', 800000, False, False),
        (83, 1, 1, 2, '–õ—å–≤–æ–≤', 800000, False, False),
        (84, 1, 1, 2, '–ö—Ä–∏–≤–æ–π –†–æ–≥', 600000, False, False),
        (85, 1, 1, 2, '–ù–∏–∫–æ–ª–∞–µ–≤', 500000, False, False),
        (86, 1, 1, 2, '–ú–∞—Ä–∏—É–ø–æ–ª—å', 500000, False, False),
        (87, 1, 1, 2, '–õ—É–≥–∞–Ω—Å–∫', 400000, False, False),
        (88, 1, 1, 2, '–í–∏–Ω–Ω–∏—Ü–∞', 400000, False, False),
        (89, 1, 1, 2, '–ú–∞–∫–µ–µ–≤–∫–∞', 400000, False, False),
        (90, 1, 1, 2, '–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å', 400000, False, False),
        (91, 1, 1, 2, '–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å', 400000, False, False),
        (92, 1, 1, 2, '–•–µ—Ä—Å–æ–Ω', 300000, False, False),
        (93, 1, 1, 2, '–ü–æ–ª—Ç–∞–≤–∞', 300000, False, False),
        (94, 1, 1, 2, '–ß–µ—Ä–Ω–∏–≥–æ–≤', 300000, False, False),
        (95, 1, 1, 2, '–ß–µ—Ä–∫–∞—Å—Å—ã', 300000, False, False),
        (96, 1, 1, 2, '–ñ–∏—Ç–æ–º–∏—Ä', 300000, False, False),
        (97, 1, 1, 2, '–°—É–º—ã', 300000, False, False),
        (98, 1, 1, 2, '–•–º–µ–ª—å–Ω–∏—Ü–∫–∏–π', 300000, False, False),
        (99, 1, 1, 2, '–ß–µ—Ä–Ω–æ–≤—Ü—ã', 300000, False, False),
        (100, 1, 1, 2, '–†–æ–≤–Ω–æ', 250000, False, False),
        
        # –ë–µ–ª–∞—Ä—É—Å—å (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥–∏–æ–Ω 1 - –ú–æ—Å–∫–≤–∞ –∫–∞–∫ –∑–∞–≥–ª—É—à–∫—É)
        (101, 1, 1, 3, '–ú–∏–Ω—Å–∫', 2000000, True, True),
        (102, 1, 1, 3, '–ì–æ–º–µ–ª—å', 500000, False, False),
        (103, 1, 1, 3, '–ú–æ–≥–∏–ª—ë–≤', 400000, False, False),
        (104, 1, 1, 3, '–í–∏—Ç–µ–±—Å–∫', 400000, False, False),
        (105, 1, 1, 3, '–ì—Ä–æ–¥–Ω–æ', 400000, False, False),
        (106, 1, 1, 3, '–ë—Ä–µ—Å—Ç', 350000, False, False),
        (107, 1, 1, 3, '–ë–æ–±—Ä—É–π—Å–∫', 200000, False, False),
        (108, 1, 1, 3, '–ë–∞—Ä–∞–Ω–æ–≤–∏—á–∏', 200000, False, False),
        (109, 1, 1, 3, '–ë–æ—Ä–∏—Å–æ–≤', 150000, False, False),
        (110, 1, 1, 3, '–ü–∏–Ω—Å–∫', 150000, False, False),
        (111, 1, 1, 3, '–û—Ä—à–∞', 150000, False, False),
        (112, 1, 1, 3, '–ú–æ–∑—ã—Ä—å', 150000, False, False),
        (113, 1, 1, 3, '–°–æ–ª–∏–≥–æ—Ä—Å–∫', 150000, False, False),
        (114, 1, 1, 3, '–ù–æ–≤–æ–ø–æ–ª–æ—Ü–∫', 100000, False, False),
        (115, 1, 1, 3, '–õ–∏–¥–∞', 100000, False, False),
        
        # –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥–∏–æ–Ω 1 - –ú–æ—Å–∫–≤–∞ –∫–∞–∫ –∑–∞–≥–ª—É—à–∫—É)
        (116, 1, 1, 4, '–ê–ª–º–∞—Ç—ã', 2000000, True, True),
        (117, 1, 1, 4, '–ê—Å—Ç–∞–Ω–∞', 1500000, True, True),
        (118, 1, 1, 4, '–®—ã–º–∫–µ–Ω—Ç', 1000000, True, True),
        (119, 1, 1, 4, '–ê–∫—Ç–æ–±–µ', 500000, False, False),
        (120, 1, 1, 4, '–¢–∞—Ä–∞–∑', 400000, False, False),
        (121, 1, 1, 4, '–ü–∞–≤–ª–æ–¥–∞—Ä', 400000, False, False),
        (122, 1, 1, 4, '–°–µ–º–µ–π', 400000, False, False),
        (123, 1, 1, 4, '–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫', 400000, False, False),
        (124, 1, 1, 4, '–£—Ä–∞–ª—å—Å–∫', 300000, False, False),
        (125, 1, 1, 4, '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫', 300000, False, False),
        (126, 1, 1, 4, '–ö—ã–∑—ã–ª–æ—Ä–¥–∞', 300000, False, False),
        (127, 1, 1, 4, '–ö–æ—Å—Ç–∞–Ω–∞–π', 300000, False, False),
        (128, 1, 1, 4, '–ê—Ç—ã—Ä–∞—É', 300000, False, False),
        (129, 1, 1, 4, '–¢–µ–º–∏—Ä—Ç–∞—É', 200000, False, False),
        (130, 1, 1, 4, '–¢—É—Ä–∫–µ—Å—Ç–∞–Ω', 200000, False, False),
        (131, 1, 1, 4, '–ö–æ–∫—à–µ—Ç–∞—É', 200000, False, False),
        (132, 1, 1, 4, '–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω', 200000, False, False),
        (133, 1, 1, 4, '–≠–∫–∏–±–∞—Å—Ç—É–∑', 200000, False, False),
        (134, 1, 1, 4, '–†—É–¥–Ω—ã–π', 150000, False, False),
    ]
    
    async with AsyncSessionLocal() as db:
        now = datetime.utcnow()
        for city_id, federal_district_id, region_id, country_id, name, population, is_million_city, is_regional_center in cities_data:
            city = City(
                id=city_id,
                federal_district_id=federal_district_id if federal_district_id > 0 else None,
                region_id=region_id if region_id > 0 else None,
                country_id=country_id,
                name=name,
                population=population,
                is_million_city=is_million_city,
                is_regional_center=is_regional_center,
                is_active=True,
                created_at=now,
                updated_at=now
            )
            db.add(city)
        await db.commit()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(cities_data)} –≥–æ—Ä–æ–¥–æ–≤")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ—Ä–æ–¥–∞—Ö...")
    
    try:
        await clear_existing_data()
        await load_countries()
        await load_federal_districts()
        await load_regions()
        await load_cities()
        
        print("\nüéâ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        async with AsyncSessionLocal() as db:
            from sqlalchemy import text
            result = await db.execute(text("SELECT COUNT(*) FROM countries"))
            countries_count = result.scalar()
            result = await db.execute(text("SELECT COUNT(*) FROM federal_districts"))
            districts_count = result.scalar()
            result = await db.execute(text("SELECT COUNT(*) FROM regions"))
            regions_count = result.scalar()
            result = await db.execute(text("SELECT COUNT(*) FROM cities"))
            cities_count = result.scalar()
            
            print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   üåç –°—Ç—Ä–∞–Ω: {countries_count}")
            print(f"   üèõÔ∏è –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –æ–∫—Ä—É–≥–æ–≤: {districts_count}")
            print(f"   üó∫Ô∏è –†–µ–≥–∏–æ–Ω–æ–≤: {regions_count}")
            print(f"   üèôÔ∏è –ì–æ—Ä–æ–¥–æ–≤: {cities_count}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        raise


if __name__ == "__main__":
    asyncio.run(main())
