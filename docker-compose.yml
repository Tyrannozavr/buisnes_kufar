services:
  backend:
    build: ./backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      SQLALCHEMY_DATABASE_URL: "postgresql://postgres:postgres@db/postgres"
      DEV_REDIRECT_URL: "http://frontend:3000"
      BACKEND_CORS_ORIGINS: '["https://tradesynergy.ru","https://www.tradesynergy.ru","http://tradesynergy.ru","http://www.tradesynergy.ru","http://localhost:3000","http://127.0.0.1:3000","http://0.0.0.0:3000","http://localhost:8000","http://127.0.0.1:8000","http://localhost","http://127.0.0.1","http://frontend:3000"]'
      CELERY_BROKER_URL: "amqp://admin:admin123@rabbitmq:5672//"
      CELERY_RESULT_BACKEND: "rpc://"
    volumes:
      - ./logs/backend:/app/logging
      - ./backend/cache:/app/cache
      - ./backend/database.db:/app/database.db
      - ./backend/uploads:/app/uploads
      - ./backend/app/static:/app/app/static
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  frontend:
    build: ./frontend
    env_file:
      - ./frontend/.env
    environment:
      NUXT_UI_FONTS: "false"
      # Для production используем относительный путь через nginx proxy
      VITE_PUBLIC_API_URL: "/api"
      API_BASE_URL: "http://backend:8000/api"
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started

  nginx:
    build: ./nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/webroot:/var/www/html
      - ./backend/uploads:/app/uploads
      - ./backend/app/static:/usr/share/nginx/html/static
    depends_on:
      - backend
      - frontend

  celery-worker:
    build: ./backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      SQLALCHEMY_DATABASE_URL: "postgresql://postgres:postgres@db/postgres"
      CELERY_BROKER_URL: "amqp://admin:admin123@rabbitmq:5672//"
      CELERY_RESULT_BACKEND: "rpc://"
    volumes:
      - ./logs/backend:/app/logging
      - ./backend/cache:/app/cache
      - ./backend/uploads:/app/uploads
    command: ["poetry", "run", "celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  celery-beat:
    build: ./backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      SQLALCHEMY_DATABASE_URL: "postgresql://postgres:postgres@db/postgres"
      CELERY_BROKER_URL: "amqp://admin:admin123@rabbitmq:5672//"
      CELERY_RESULT_BACKEND: "rpc://"
    volumes:
      - ./logs/backend:/app/logging
      - ./backend/cache:/app/cache
    command: ["poetry", "run", "celery", "-A", "app.celery_app", "beat", "--loglevel=info"]
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  certbot:
    build:
      context: ./certbot
    env_file:
      - ./certbot/.env
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/webroot:/var/www/html
    depends_on:
      - nginx

  certbot-fix:
    build:
      context: ./certbot
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
    command: ["/usr/local/bin/fix-certificate-links.sh"]

#  pgadmin:
#    image: dpage/pgadmin4
#    restart: unless-stopped
#    ports:
#      - "5050:5050"
#    environment:
#      PGADMIN_DEFAULT_EMAIL: dmitriy40647274@gmail.com
#      PGADMIN_DEFAULT_PASSWORD: adminKufar2398

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    command: >
      -c shared_buffers=512MB
      -c max_connections=200
      -c idle_in_transaction_session_timeout=10s
      -c tcp_keepalives_idle=60
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data:cached

volumes:
  rabbitmq_data:

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin123"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5