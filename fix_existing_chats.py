#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —á–∞—Ç–æ–≤ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from app.db.base import AsyncSessionLocal
from app.api.chats.models.chat_participant import ChatParticipant
from app.api.chats.models.chat import Chat
from app.api.company.models.company import Company
from app.api.authentication.models import User

async def fix_existing_chats():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —á–∞—Ç—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏"""
    
    async with AsyncSessionLocal() as db:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —á–∞—Ç—ã
        result = await db.execute(select(Chat))
        chats = result.scalars().all()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: {len(chats)}")
        
        for chat in chats:
            print(f"\n–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Ç ID: {chat.id}")
            
            # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
            result = await db.execute(
                select(ChatParticipant).where(ChatParticipant.chat_id == chat.id)
            )
            participants = result.scalars().all()
            
            if len(participants) != 2:
                print(f"  ‚ö†Ô∏è  –ß–∞—Ç –∏–º–µ–µ—Ç {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 2)")
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è user_id
            user_ids = [p.user_id for p in participants]
            if len(set(user_ids)) == 1:
                print(f"  ‚ùå –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞: –æ–±–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–º–µ—é—Ç user_id {user_ids[0]}")
                
                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–ø–∞–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                company_ids = [p.company_id for p in participants]
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏—è—Ö
                result = await db.execute(
                    select(Company).where(Company.id.in_(company_ids))
                )
                companies = result.scalars().all()
                
                # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –∫–æ–º–ø–∞–Ω–∏–π
                companies_dict = {c.id: c for c in companies}
                
                # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
                for participant in participants:
                    company = companies_dict.get(participant.company_id)
                    if company and participant.user_id != company.user_id:
                        print(f"  üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ {participant.id}: user_id {participant.user_id} -> {company.user_id}")
                        participant.user_id = company.user_id
                
                await db.commit()
                print(f"  ‚úÖ –ß–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
            else:
                print(f"  ‚úÖ –ß–∞—Ç –≤ –ø–æ—Ä—è–¥–∫–µ: —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–µ user_id {user_ids}")

async def show_chat_participants():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–æ–≤"""
    
    async with AsyncSessionLocal() as db:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–ø–∞–Ω–∏—è—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        result = await db.execute(
            select(ChatParticipant, Company, User)
            .join(Company, ChatParticipant.company_id == Company.id)
            .join(User, ChatParticipant.user_id == User.id)
            .order_by(ChatParticipant.chat_id, ChatParticipant.id)
        )
        
        participants_data = result.all()
        
        print("–£—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–æ–≤:")
        print("-" * 80)
        
        current_chat = None
        for participant, company, user in participants_data:
            if current_chat != participant.chat_id:
                current_chat = participant.chat_id
                print(f"\n–ß–∞—Ç ID: {participant.chat_id}")
                print("-" * 40)
            
            print(f"  –£—á–∞—Å—Ç–Ω–∏–∫ ID: {participant.id}")
            print(f"    –ö–æ–º–ø–∞–Ω–∏—è: {company.name} (ID: {company.id})")
            print(f"    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name} {user.last_name} (ID: {user.id})")
            print(f"    –í–ª–∞–¥–µ–ª–µ—Ü –∫–æ–º–ø–∞–Ω–∏–∏: {company.user_id == user.id}")
            print()

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "show":
        asyncio.run(show_chat_participants())
    else:
        print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —á–∞—Ç–æ–≤...")
        asyncio.run(fix_existing_chats())
        print("\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–æ–≤ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        asyncio.run(show_chat_participants()) 